<displayset date="09/09/18 22:56:09/18/09">
<plot pos="(0, 0)" size="(493, 400)" show="0" tbVal="(0,0,1)"><mangle>debug=1
data=numpy.random.random((54,))*2000+32768-1000
tbNames=["Coeffs","Zernike","Spline"]
if data.shape!=(54,):
 print "Error - expecting 54 actuators got %s"%str(data.shape)
nmodes=45
data[:52]-=data[:52].sum()/52.#remove piston...
tt=(data[52:]-32768.)/32768#remove tt offset and normalise so tt values range from -1 to 1
if not store.has_key("z"):#do the setup...
 import tel
 import zernike
 store["pupfn"]=tel.Pupil(8,4,0).fn.astype(numpy.int32)
 store["actmap"]=numpy.zeros((8,8),numpy.float32)
 store["z"]=zernike.Zernike(store["pupfn"],nmodes)
 size=64
 store["out"]=numpy.zeros((size,size),numpy.float32)
 store["bigpfn"]=tel.Pupil(size,size/2,0).fn.astype(numpy.int32)
 store["ztt"]=zernike.Zernike(tel.Pupil(int(size*0.18),int(size*0.18)/2,0).fn.astype(numpy.int32),3)
 store["ttscale"]=numpy.max(store["ztt"].zern[1]+store["ztt"].zern[2])
z=store["z"]
ttscale=store["ttscale"]
bigpfn=store["bigpfn"]
ztt=store["ztt"]
actmap=store["actmap"]
pupfn=store["pupfn"]
out=store["out"]
numpy.put(actmap,numpy.nonzero(pupfn.ravel())[0],data[:52])
import overlayMaker
if tbVal[0]:#plot the zernike coeffiecients
 data=z.calcZernikeCoeff(actmap)
 title="Zernike coefficients"
elif tbVal[1]:#plot a reconstructed zernike
 coeff=z.calcZernikeCoeff(actmap)
 data=z.zernikeReconstruct(coeff,out)
 #now inset the tip-tilt...
 ttdata=ztt.zern[1]*tt[0]+ztt.zern[2]*tt[1]
 rnge=numpy.max(data)-numpy.min(data)
 data[-ttdata.shape[0]:,-ttdata.shape[1]:]+=ttdata*rnge/ttscale
 title="Zernike reconstruction"
elif tbVal[2]:#plot a cubic spline fit.
 data=overlayMaker.createSplineOverlay(actmap,out)*bigpfn
 #now inset the tip-tilt...
 ttdata=ztt.zern[1]*tt[0]+ztt.zern[2]*tt[1]
 rnge=numpy.max(data)-numpy.min(data)
 data[-ttdata.shape[0]:,-ttdata.shape[1]:]+=ttdata*rnge/ttscale
 title="Cubic spline interpolation"
else:
 data=actmap
 title="Reconstructed phase map"
</mangle>
<sub>[('Mir', 1, 100),('rtcMirrorBuf',1,100)]</sub>
</plot>
</displayset>
